import java.io.File;
import java.io.IOException;
import java.util.Scanner;

public class project1 {

	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		String[][] boyNames = new String[10][1000];
		String[][] girlNames = new String[10][1000];
		int year;
		String gender;
		String name;
		String male = "M";
		String female = "F";

		loadNames(boyNames, girlNames);

		System.out.printf("Enter the year: ");
		year = input.nextInt();
		while (year >= 2001 && year <= 2010) {
			System.out.printf("Enter the gender: ");
			gender = input.next();
			if (gender.equalsIgnoreCase(male)) {
				System.out.printf("Enter the name: ");
				name = input.next();
				searchNameRank(boyNames[year - 2001], name, year);
			} else if (gender.equalsIgnoreCase(female)) {
				System.out.printf("Enter the name: ");
				name = input.next();
				searchNameRank(girlNames[year - 2001], name, year);
			} else {
				System.out.println("Please input gender: 'M' or 'F'.");
			}
		}
		System.out.println("Please input year between 2001 and 2010.");
	}

	public static void loadNames(String[][] boyNames, String[][] girlNames) {
		int year;

		for (year = 2001; year <= 2010; year++) {
			File file = new File("babynamesranking" + year + ".txt");

			try (Scanner fileScanner = new Scanner(file)) {
				int rank;

				while (fileScanner.hasNextLine()) {
					String[] line = fileScanner.nextLine().split("\\s+");
					rank = Integer.parseInt(line[0]);
					boyNames[year - 2001][rank - 1] = line[1];
					girlNames[year - 2001][rank - 1] = line[3];
				}

			} catch (IOException e) {
				System.out.println(e.getMessage());
			}

		}
	}

	public static void searchNameRank(String[] arr, String name, int year) {
		int rank = -1;
		for (int i = 0; i < arr.length; i++) {
			if (arr[i].equalsIgnoreCase(name)) {
				rank = i + 1; // Rank equals to i + 1 if the element is found
			}
		}
		if (rank != -1) {
			System.out.println(name + " is ranked #" + rank + " in " + year);
		} else {
			System.out.println("The name " + name + " is not ranked in " + year);
		}
	}

}